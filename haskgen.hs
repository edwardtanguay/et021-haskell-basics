import System.IO
import Data.List (intercalate)
import BaseModule

-- SYSTEM FUNCTIONS

getSitePostcontentHtml :: String
getSitePostcontentHtml = 
    "</body>\n" ++
    "</html>\n"

getIntroHtml :: String
getIntroHtml = 
    "<h1>Haskell-Generated Site</h1>\n" ++
    "<p>This site was generated by <a target=\"_blank\" href=\"https://github.com/edwardtanguay/et021-haskell-basics/blob/dev/haskgen.hs\">this Haskell script</a>.</p>\n" ++ 
    "<p>See also <a target=\"_blank\" href=\"https://tanguay-eu.vercel.app/forays/263\">my notes</a> on this project.</p>\n" ++
    "<hr/>\n"

getTitleHtml :: String -> String
getTitleHtml title = 
    "<h2>" ++ title ++ "</h2>\n"

getFooterHtml :: String -> String
getFooterHtml version = 
    "<hr/>\n" ++
    "<p>version: " ++ version ++ "</p>\n" ++
    "See also: Edward's <a href=\"https://tanguay-eu.vercel.app/howtos\">Howtos</a> and <a href=\"https://tanguay-eu.vercel.app/forays\">Forays</a>\n"

-- HELPER FUNCTIONS

getHaskellListInfoHtml :: [String] -> String
getHaskellListInfoHtml strings = 
    "<p>HASKELL LIST: [\"" ++ intercalate "\",\"" strings ++ "\"]</p>\n" ++
    "<ul>\n" ++
    "<li>head: " ++ show(head strings) ++ "</li>\n" ++
    "<li>tail: " ++ show(tail strings) ++ "</li>\n" ++
    "<li>init: " ++ show(init strings) ++ "</li>\n" ++
    "<li>last: " ++ show(last strings) ++ "</li>\n" ++
    "<li>length: " ++ show(length strings) ++ "</li>\n" ++
    "<li>null: " ++ show(null strings) ++ "</li>\n" ++
    "<li>reverse: " ++ show(reverse strings) ++ "</li>\n" ++
    "<li>take 1: " ++ show(take 1 strings) ++ "</li>\n" ++
    "<li>take 2: " ++ show(take 2 strings) ++ "</li>\n" ++
    "<li>take 3: " ++ show(take 3 strings) ++ "</li>\n" ++
    "<li>take 4: " ++ show(take 4 strings) ++ "</li>\n" ++
    "<li>take 5: " ++ show(take 5 strings) ++ "</li>\n" ++
    "<li>drop 1: " ++ show(drop 1 strings) ++ "</li>\n" ++
    "<li>drop 2: " ++ show(drop 2 strings) ++ "</li>\n" ++
    "<li>drop 3: " ++ show(drop 3 strings) ++ "</li>\n" ++
    "<li>drop 4: " ++ show(drop 4 strings) ++ "</li>\n" ++
    "<li>drop 5: " ++ show(drop 5 strings) ++ "</li>\n" ++
    "<li>minimum: " ++ show(minimum strings) ++ "</li>\n" ++
    "<li>maximum: " ++ show(maximum strings) ++ "</li>\n" ++
    "<li>\"blue\" `elem`: " ++ show("blue" `elem` strings) ++ "</li>\n" ++
    "<li>\"Hamburg\" `elem`: " ++ show("Hamburg" `elem` strings) ++ "</li>\n" ++
    "</ul>\n"

-- EXAMPLE FUNCTIONS

getExampleTwoLists :: String 
getExampleTwoLists = 
    getTitleHtml "EX001: Show two UL/LI lists" ++
    getListHtml ["one", "two", "three", "four", "five", "six"] ++
    getListHtml ["red", "blue", "green"]

getDemonstrateLists :: String
getDemonstrateLists =
    let colors = ["red", "blue", "purple", "orange"]
        cities = ["Berlin", "Hamburg", "Paris", "London", "Madrid"]
    in getTitleHtml "EX002: Demonstrate Haskell lists" ++
    getHaskellListInfoHtml colors ++
    getHaskellListInfoHtml cities

getDemonstrateRanges :: String
getDemonstrateRanges =
    getTitleHtml "EX003: Demonstrate Haskell ranges" ++
    "<p>NUMBER RANGES:</p>\n" ++
    "<ul>\n" ++
    "<li>Range [1..20] as string: " ++ getParenthesesString [1..20] ++ "</li>" ++
    "<li>Range [2, 4..20] as string: " ++ getParenthesesString [2, 4..20] ++ "</li>" ++
    "<li>Range [3, 6..20] as string: " ++ getParenthesesString [3, 6..20] ++ "</li>" ++
    "<li>Range [10, 20..100] as string: " ++ getParenthesesString [10, 20..100] ++ "</li>" ++
    "<li>Range [20..100] as string: " ++ getParenthesesString [20..100] ++ "</li>" ++
--    "<li>Range [0.1, 0.3..1] as string: " ++ getParenthesesString [0.1, 0.3..1] ++ "</li>" ++
    "</ul>"

-- MAIN CODE

main :: IO ()
main = do
    let filePath = "/var/www/haskell/index.html"
    let html = getSitePrecontentHtml 
                ++ getIntroHtml 
                ++ getExampleTwoLists 
                ++ getDemonstrateLists
                ++ getDemonstrateRanges
                ++ getFooterHtml "0.7" 
                ++ getSitePostcontentHtml
    writeFile filePath html
