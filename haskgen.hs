import System.IO
import Data.List (intercalate)

-- SYSTEM FUNCTIONS

getSitePrecontentHtml :: String
getSitePrecontentHtml = 
    "<!DOCTYPE html>\n" ++
    "<html>\n" ++
    "<head>\n" ++
    "   <meta charset=\"UTF-8\">\n" ++
    "   <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n" ++
    "   <title>Haskell-Generated Site</title>\n" ++
    "   <style>\n" ++
    "       body {\n" ++
    "           background-color: #aaa;\n" ++
    "           font-family: sans-serif;\n" ++
    "           padding-left: 1rem;\n" ++
    "       }\n" ++
    "       ul {\n" ++
    "           margin-top: -.5rem;\n" ++
    "       }\n" ++
    "   </style>\n" ++
    "</head>\n" ++
    "<body>\n"

getSitePostcontentHtml :: String
getSitePostcontentHtml = 
    "</body>\n" ++
    "</html>\n"

getIntroHtml :: String
getIntroHtml = 
    "<h1>Haskell-Generated Site</h1>\n" ++
    "<p>This site was generated by <a target=\"_blank\" href=\"https://github.com/edwardtanguay/et021-haskell-basics/blob/dev/haskgen.hs\">this Haskell script</a>.</p>\n" ++ 
    "<p>See also <a target=\"_blank\" href=\"https://tanguay-eu.vercel.app/forays/263\">my notes</a> on this project.</p>\n" ++
    "<hr/>\n"

getTitleHtml :: String -> String
getTitleHtml title = 
    "<h2>" ++ title ++ "</h2>\n"

getFooterHtml :: String -> String
getFooterHtml version = 
    "<hr/>\n" ++
    "<p>version: " ++ version ++ "</p>\n" ++
    "See also: Edward's <a href=\"https://tanguay-eu.vercel.app/howtos\">Howtos</a> and <a href=\"https://tanguay-eu.vercel.app/forays\">Forays</a>\n"

-- HELPER FUNCTIONS

getListHtml :: [String] -> String
getListHtml strings = 
    "<ul>\n" ++ concatMap (\s -> "<li>" ++ s ++ "</li>\n") strings ++ "</ul>\n"

getHaskellListInfoHtml :: [String] -> String
getHaskellListInfoHtml strings = 
    "<p>HASKELL LIST: [\"" ++ intercalate "\",\"" strings ++ "\"]</p>\n" ++
    "<ul>\n" ++
    "<li>head: " ++ show(head strings) ++ "</li>\n" ++
    "<li>tail: " ++ show(tail strings) ++ "</li>\n" ++
    "<li>init: " ++ show(init strings) ++ "</li>\n" ++
    "<li>last: " ++ show(last strings) ++ "</li>\n" ++
    "<li>length: " ++ show(length strings) ++ "</li>\n" ++
    "<li>null: " ++ show(null strings) ++ "</li>\n" ++
    "<li>reverse: " ++ show(reverse strings) ++ "</li>\n" ++
    "<li>take 1: " ++ show(take 1 strings) ++ "</li>\n" ++
    "<li>take 2: " ++ show(take 2 strings) ++ "</li>\n" ++
    "<li>take 3: " ++ show(take 3 strings) ++ "</li>\n" ++
    "<li>take 4: " ++ show(take 4 strings) ++ "</li>\n" ++
    "<li>take 5: " ++ show(take 5 strings) ++ "</li>\n" ++
    "</ul>\n"

-- EXAMPLE FUNCTIONS

getExampleTwoLists :: String 
getExampleTwoLists = 
    getTitleHtml "EX001: Show two UL/LI lists" ++
    getListHtml ["one", "two", "three", "four", "five", "six"] ++
    getListHtml ["red", "blue", "green"]

getDemonstrateLists :: String
getDemonstrateLists =
    let colors = ["red", "blue", "purple", "orange"]
        cities = ["Berlin", "Hamburg", "Paris", "London", "Madrid"]
    in getTitleHtml "EX002: Demonstrate Haskell lists" ++
    getHaskellListInfoHtml colors ++
    getHaskellListInfoHtml cities

-- MAIN CODE

main :: IO ()
main = do
    let filePath = "/var/www/haskell/index.html"
    let html = getSitePrecontentHtml 
                ++ getIntroHtml 
                ++ getExampleTwoLists 
                ++ getDemonstrateLists
                ++ getFooterHtml "0.6" 
                ++ getSitePostcontentHtml
    writeFile filePath html
